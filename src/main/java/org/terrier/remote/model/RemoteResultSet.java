/*
 * Terrier Remote API
 * This is an API to allow a client to search a remote index with Terrier
 *
 * OpenAPI spec version: 1.0.0
 * Contact: 2133815j@student.gla.ac.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.terrier.remote.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.terrier.remote.model.Metadata;
import java.util.ArrayList;
import java.util.List;

/**
 * RemoteResultSet
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2017-11-22T17:36:12.835Z")
public class RemoteResultSet   {
  @JsonProperty("docIds")
  private List<Integer> docIds = new ArrayList<Integer>();

  @JsonProperty("scores")
  private List<Double> scores = new ArrayList<Double>();

  @JsonProperty("resultSize")
  private Integer resultSize = null;

  @JsonProperty("metadata")
  private Metadata metadata = null;

  public RemoteResultSet docIds(List<Integer> docIds) {
    this.docIds = docIds;
    return this;
  }

  public RemoteResultSet addDocIdsItem(Integer docIdsItem) {
    this.docIds.add(docIdsItem);
    return this;
  }

   /**
   * Get docIds
   * @return docIds
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Integer> getDocIds() {
    return docIds;
  }

  public void setDocIds(List<Integer> docIds) {
    this.docIds = docIds;
  }


  public RemoteResultSet scores(List<Double> scores) {
    this.scores = scores;
    return this;
  }

  public RemoteResultSet addScoresItem(Double scoresItem) {
    this.scores.add(scoresItem);
    return this;
  }

   /**
   * Get scores
   * @return scores
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Double> getScores() {
    return scores;
  }

  public void setScores(List<Double> scores) {
    this.scores = scores;
  }

  public RemoteResultSet resultSize(Integer resultSize) {
    this.resultSize = resultSize;
    return this;
  }

   /**
   * Get resultSize
   * @return resultSize
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getResultSize() {
    return resultSize;
  }

  public void setResultSize(Integer resultSize) {
    this.resultSize = resultSize;
  }

  public RemoteResultSet metadata(Metadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Metadata getMetadata() {
    return metadata;
  }

  public void setMetadata(Metadata metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteResultSet remoteResultSet = (RemoteResultSet) o;
    return Objects.equals(this.docIds, remoteResultSet.docIds) &&
        Objects.equals(this.scores, remoteResultSet.scores) &&
        Objects.equals(this.resultSize, remoteResultSet.resultSize) &&
        Objects.equals(this.metadata, remoteResultSet.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(docIds, scores, resultSize, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteResultSet {\n");
    
    sb.append("    docIds: ").append(toIndentedString(docIds)).append("\n");
    sb.append("    scores: ").append(toIndentedString(scores)).append("\n");
    sb.append("    resultSize: ").append(toIndentedString(resultSize)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

